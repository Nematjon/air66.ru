<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Chunks' => 
    array (
      'fa30e3e97400b972a4e504603d18c6f4' => 
      array (
        'preserve_keys' => false,
        'update_object' => false,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"tpl.Comparison.add","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<div class=\\"comparison comparison-[[+list]][[+added]][[+can_compare]]\\" data-id=\\"[[+id]]\\" data-list=\\"[[+list]]\\">\\n\\t<a href=\\"#\\" class=\\"comparison-add comparison-link\\" data-text=\\"[[%comparison_updating_list]]\\">[[%comparison_add_to_list]]<\\/a>\\n\\t<a href=\\"#\\" class=\\"comparison-remove comparison-link\\" data-text=\\"[[%comparison_updating_list]]\\">[[%comparison_remove_from_list]]<\\/a>\\n\\t<a href=\\"[[+link]]\\" class=\\"comparison-go\\">[[%comparison_go_to_list]]<\\/a>\\n\\t<span class=\\"comparison-total\\">[[+total]]<\\/span>\\n<\\/div>\\n\\n<!--comparison_can_compare  can_compare-->\\n<!--comparison_added  added-->","locked":0,"properties":null,"static":0,"static_file":"core\\/components\\/comparison\\/elements\\/chunks\\/chunk.add.tpl","content":"<div class=\\"comparison comparison-[[+list]][[+added]][[+can_compare]]\\" data-id=\\"[[+id]]\\" data-list=\\"[[+list]]\\">\\n\\t<a href=\\"#\\" class=\\"comparison-add comparison-link\\" data-text=\\"[[%comparison_updating_list]]\\">[[%comparison_add_to_list]]<\\/a>\\n\\t<a href=\\"#\\" class=\\"comparison-remove comparison-link\\" data-text=\\"[[%comparison_updating_list]]\\">[[%comparison_remove_from_list]]<\\/a>\\n\\t<a href=\\"[[+link]]\\" class=\\"comparison-go\\">[[%comparison_go_to_list]]<\\/a>\\n\\t<span class=\\"comparison-total\\">[[+total]]<\\/span>\\n<\\/div>\\n\\n<!--comparison_can_compare  can_compare-->\\n<!--comparison_added  added-->"}',
        'guid' => 'f0746a0b610ba75a829890054ca24b3e',
        'native_key' => 0,
        'signature' => 'e076e687eadac2e3bd2588201e56081e',
      ),
      'd37523a98a901d3ff0005a749152f9f0' => 
      array (
        'preserve_keys' => false,
        'update_object' => false,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"tpl.Comparison.get","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<span class=\\"comparison comparison-[[+list]][[+added]][[+can_compare]]\\">\\n\\t<a href=\\"[[+link]]\\" class=\\"comparison-go\\">\\n\\t\\t[[%comparison_go_to_list]] (<span class=\\"comparison-total\\">[[+count]]<\\/span>)\\n\\t<\\/a>\\n<\\/span>\\n\\n<!--comparison_can_compare  can_compare-->\\n<!--comparison_added  added-->","locked":0,"properties":null,"static":0,"static_file":"core\\/components\\/comparison\\/elements\\/chunks\\/chunk.get.tpl","content":"<span class=\\"comparison comparison-[[+list]][[+added]][[+can_compare]]\\">\\n\\t<a href=\\"[[+link]]\\" class=\\"comparison-go\\">\\n\\t\\t[[%comparison_go_to_list]] (<span class=\\"comparison-total\\">[[+count]]<\\/span>)\\n\\t<\\/a>\\n<\\/span>\\n\\n<!--comparison_can_compare  can_compare-->\\n<!--comparison_added  added-->"}',
        'guid' => '60cce0669e972e1199217f8a625b515f',
        'native_key' => 0,
        'signature' => 'dab6a00bc4c92a1a9d9d88777a4eda78',
      ),
      'baeb6f48990f892b52dfba51bbdaffd3' => 
      array (
        'preserve_keys' => false,
        'update_object' => false,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"tpl.Comparison.outer","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<table class=\\"comparison comparison-table table table-hover\\">\\n\\t<thead>\\n\\t\\t[[+head]]\\n\\t<\\/thead>\\n\\t<tbody>\\n\\t\\t[[+rows]]\\n\\t<\\/tbody>\\n<\\/table>","locked":0,"properties":null,"static":0,"static_file":"core\\/components\\/comparison\\/elements\\/chunks\\/chunk.table_outer.tpl","content":"<table class=\\"comparison comparison-table table table-hover\\">\\n\\t<thead>\\n\\t\\t[[+head]]\\n\\t<\\/thead>\\n\\t<tbody>\\n\\t\\t[[+rows]]\\n\\t<\\/tbody>\\n<\\/table>"}',
        'guid' => 'd5c4ee14701797b74cc075d81488ee4e',
        'native_key' => 0,
        'signature' => '9d84f35f7dea9525fea7aa6f118d579a',
      ),
      'e5aafb77817885686d0ba18209e7d4d5' => 
      array (
        'preserve_keys' => false,
        'update_object' => false,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"tpl.Comparison.corner","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<td class=\\"comparison-corner\\">\\n\\t<a href=\\"#\\" class=\\"comparison-params-all comparison-link\\">[[%comparison_params_all]]<\\/a><br\\/>\\n\\t<a href=\\"#\\" class=\\"comparison-params-unique comparison-link active\\">[[%comparison_params_unique]]<\\/a>\\n<\\/td>","locked":0,"properties":null,"static":0,"static_file":"core\\/components\\/comparison\\/elements\\/chunks\\/chunk.table_corner.tpl","content":"<td class=\\"comparison-corner\\">\\n\\t<a href=\\"#\\" class=\\"comparison-params-all comparison-link\\">[[%comparison_params_all]]<\\/a><br\\/>\\n\\t<a href=\\"#\\" class=\\"comparison-params-unique comparison-link active\\">[[%comparison_params_unique]]<\\/a>\\n<\\/td>"}',
        'guid' => '486fc5a419adbf7765d913c02c7ad7e1',
        'native_key' => 0,
        'signature' => '3135f3411d9bc8f5c7ce3967ea7b2627',
      ),
      '1e1fd3256ac550601d7335c75cd17863' => 
      array (
        'preserve_keys' => false,
        'update_object' => false,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"tpl.Comparison.head","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<td class=\\"comparison-head\\" data-id=\\"[[+id]]\\" data-list=\\"[[+list]]\\">\\n\\t<img src=\\"[[+thumb]]\\" alt=\\"\\" title=\\"\\" \\/><br\\/>\\n\\t<a href=\\"[[~[[+id]]]]\\">[[+pagetitle]]<\\/a><br\\/>\\n\\t<a href=\\"#\\" class=\\"comparison-remove comparison-link\\" data-text=\\"[[%comparison_updating_list]]\\">[[%comparison_remove]]<\\/a>\\n<\\/td>","locked":0,"properties":null,"static":0,"static_file":"core\\/components\\/comparison\\/elements\\/chunks\\/chunk.table_head.tpl","content":"<td class=\\"comparison-head\\" data-id=\\"[[+id]]\\" data-list=\\"[[+list]]\\">\\n\\t<img src=\\"[[+thumb]]\\" alt=\\"\\" title=\\"\\" \\/><br\\/>\\n\\t<a href=\\"[[~[[+id]]]]\\">[[+pagetitle]]<\\/a><br\\/>\\n\\t<a href=\\"#\\" class=\\"comparison-remove comparison-link\\" data-text=\\"[[%comparison_updating_list]]\\">[[%comparison_remove]]<\\/a>\\n<\\/td>"}',
        'guid' => '43b675387ecd7b9f7c799b25070bc86e',
        'native_key' => 0,
        'signature' => '63a3398b4e680e2bc8564877cfb3ef1a',
      ),
      'e74053d14fa63336a3d9e8375316ae85' => 
      array (
        'preserve_keys' => false,
        'update_object' => false,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"tpl.Comparison.param","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<td class=\\"comparison-param\\">\\n\\t[[+row_idx]]. <strong>[[+param]]<\\/strong>\\n<\\/td>","locked":0,"properties":null,"static":0,"static_file":"core\\/components\\/comparison\\/elements\\/chunks\\/chunk.table_param.tpl","content":"<td class=\\"comparison-param\\">\\n\\t[[+row_idx]]. <strong>[[+param]]<\\/strong>\\n<\\/td>"}',
        'guid' => '4e5ee94caccff4621db7807aec219633',
        'native_key' => 0,
        'signature' => '4b5fff2919134c45df35e8096eee7365',
      ),
      '0763bbf56c212a3abce03be5711b2f5e' => 
      array (
        'preserve_keys' => false,
        'update_object' => false,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"tpl.Comparison.row","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<tr class=\\"comparison-row[[+same]]\\">[[+cells]]<\\/tr>\\n<!--comparison_same  same-->","locked":0,"properties":null,"static":0,"static_file":"core\\/components\\/comparison\\/elements\\/chunks\\/chunk.table_row.tpl","content":"<tr class=\\"comparison-row[[+same]]\\">[[+cells]]<\\/tr>\\n<!--comparison_same  same-->"}',
        'guid' => '7d6a0f050487cd988bf97e54a54f9954',
        'native_key' => 0,
        'signature' => '8fd54c25f60af98fd08838355aa8e663',
      ),
      '42b16b3263acca277e62a2016ef5a945' => 
      array (
        'preserve_keys' => false,
        'update_object' => false,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"tpl.Comparison.cell","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<td class=\\"comparison-cell[[+classes]]\\">[[+value]]<\\/td>","locked":0,"properties":null,"static":0,"static_file":"core\\/components\\/comparison\\/elements\\/chunks\\/chunk.table_cell.tpl","content":"<td class=\\"comparison-cell[[+classes]]\\">[[+value]]<\\/td>"}',
        'guid' => '251d6dcde506d8472a8939eb13d1f801',
        'native_key' => 0,
        'signature' => '39c1e49aaf1c68213d7a3a7a6ea348c9',
      ),
    ),
    'Snippets' => 
    array (
      '38419ffbde981b150cd45864e8f64bc7' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"AddComparison","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/** @var array $scriptProperties *\\/\\n\\/** @var Comparison $Comparison *\\/\\n$Comparison = $modx->getService(\'comparison\',\'Comparison\',$modx->getOption(\'comparison_core_path\',null,$modx->getOption(\'core_path\').\'components\\/comparison\\/\').\'model\\/comparison\\/\',$scriptProperties);\\nif (!($Comparison instanceof Comparison)) return \'\';\\n$Comparison->initialize($modx->context->key);\\n\\/** @var pdoTools $pdoTools *\\/\\n$fqn = $modx->getOption(\'pdoTools.class\', null, \'pdotools.pdotools\', true);\\nif (!$pdoClass = $modx->loadClass($fqn, \'\', false, true)) {return false;}\\n$scriptProperties[\'nestedChunkPrefix\'] = \'comparison_\';\\n$pdoTools = new $pdoClass($modx, $scriptProperties);\\n\\nif (empty($tpl)) {$tpl = \'tpl.Comparison.add\';}\\nif (empty($list)) {$list = \'cmp\';}\\nif (empty($id)) {$id = $modx->resource->id;}\\nif (empty($minItems)) {$minItems = 2;}\\nif (empty($maxItems)) {$maxItems = 10;}\\nif (empty($id)) {$id = $modx->resource->id;}\\nif (empty($list_id) || !is_numeric($list_id)) {\\n\\treturn $modx->lexicon(\'comparison_err_no_list_id\');\\n}\\n\\n$ids = !empty($_SESSION[\'Comparison\'][$modx->context->key][$list])\\n\\t? $_SESSION[\'Comparison\'][$modx->context->key][$list][\'ids\']\\n\\t: array();\\n$_SESSION[\'Comparison\'][$modx->context->key][$list] = array(\\n\\t\'list_id\' => $list_id,\\n\\t\'minItems\' => $minItems,\\n\\t\'maxItems\' => $maxItems,\\n\\t\'ids\' => $ids,\\n);\\n\\n$pls = array(\\n\\t\'list\' => $list,\\n\\t\'id\' => $id,\\n\\t\'list_id\' => $list_id,\\n\\t\'added\' => isset($ids[$id]),\\n\\t\'can_compare\' => count($ids) > 1,\\n\\t\'total\' => count($ids),\\n);\\n\\n$link_params = array();\\nif ($list != \'default\') {\\n\\t$link_params[\'list\'] = $list;\\n}\\nif (!empty($ids)) {\\n\\t$link_params[\'cmp_ids\'] = implode(\',\', array_keys($ids));\\n}\\n$pls[\'link\'] = !empty($link_params[\'cmp_ids\'])\\n\\t? urldecode($modx->context->makeUrl($list_id, $link_params, $modx->getOption(\'link_tag_scheme\')))\\n\\t: \'#\';\\n\\n$modx->regClientScript(\'<script type=\\"text\\/javascript\\">Comparison.add.initialize(\\".comparison-\'.$list.\'\\", {minItems:\'.$minItems.\'});<\\/script>\', true);\\nreturn $pdoTools->getChunk($tpl, $pls);","locked":0,"properties":"a:6:{s:2:\\"id\\";a:7:{s:4:\\"name\\";s:2:\\"id\\";s:4:\\"desc\\";s:18:\\"comparison_prop_id\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:19:\\"comparison_prop_tpl\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:18:\\"tpl.Comparison.add\\";s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"list\\";a:7:{s:4:\\"name\\";s:4:\\"list\\";s:4:\\"desc\\";s:20:\\"comparison_prop_list\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:7:\\"default\\";s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"list_id\\";a:7:{s:4:\\"name\\";s:7:\\"list_id\\";s:4:\\"desc\\";s:23:\\"comparison_prop_list_id\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"minItems\\";a:7:{s:4:\\"name\\";s:8:\\"minItems\\";s:4:\\"desc\\";s:24:\\"comparison_prop_minItems\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:2;s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"maxItems\\";a:7:{s:4:\\"name\\";s:8:\\"maxItems\\";s:4:\\"desc\\";s:24:\\"comparison_prop_maxItems\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"core\\/components\\/comparison\\/elements\\/snippets\\/snippet.addcomparison.php","content":"\\/** @var array $scriptProperties *\\/\\n\\/** @var Comparison $Comparison *\\/\\n$Comparison = $modx->getService(\'comparison\',\'Comparison\',$modx->getOption(\'comparison_core_path\',null,$modx->getOption(\'core_path\').\'components\\/comparison\\/\').\'model\\/comparison\\/\',$scriptProperties);\\nif (!($Comparison instanceof Comparison)) return \'\';\\n$Comparison->initialize($modx->context->key);\\n\\/** @var pdoTools $pdoTools *\\/\\n$fqn = $modx->getOption(\'pdoTools.class\', null, \'pdotools.pdotools\', true);\\nif (!$pdoClass = $modx->loadClass($fqn, \'\', false, true)) {return false;}\\n$scriptProperties[\'nestedChunkPrefix\'] = \'comparison_\';\\n$pdoTools = new $pdoClass($modx, $scriptProperties);\\n\\nif (empty($tpl)) {$tpl = \'tpl.Comparison.add\';}\\nif (empty($list)) {$list = \'cmp\';}\\nif (empty($id)) {$id = $modx->resource->id;}\\nif (empty($minItems)) {$minItems = 2;}\\nif (empty($maxItems)) {$maxItems = 10;}\\nif (empty($id)) {$id = $modx->resource->id;}\\nif (empty($list_id) || !is_numeric($list_id)) {\\n\\treturn $modx->lexicon(\'comparison_err_no_list_id\');\\n}\\n\\n$ids = !empty($_SESSION[\'Comparison\'][$modx->context->key][$list])\\n\\t? $_SESSION[\'Comparison\'][$modx->context->key][$list][\'ids\']\\n\\t: array();\\n$_SESSION[\'Comparison\'][$modx->context->key][$list] = array(\\n\\t\'list_id\' => $list_id,\\n\\t\'minItems\' => $minItems,\\n\\t\'maxItems\' => $maxItems,\\n\\t\'ids\' => $ids,\\n);\\n\\n$pls = array(\\n\\t\'list\' => $list,\\n\\t\'id\' => $id,\\n\\t\'list_id\' => $list_id,\\n\\t\'added\' => isset($ids[$id]),\\n\\t\'can_compare\' => count($ids) > 1,\\n\\t\'total\' => count($ids),\\n);\\n\\n$link_params = array();\\nif ($list != \'default\') {\\n\\t$link_params[\'list\'] = $list;\\n}\\nif (!empty($ids)) {\\n\\t$link_params[\'cmp_ids\'] = implode(\',\', array_keys($ids));\\n}\\n$pls[\'link\'] = !empty($link_params[\'cmp_ids\'])\\n\\t? urldecode($modx->context->makeUrl($list_id, $link_params, $modx->getOption(\'link_tag_scheme\')))\\n\\t: \'#\';\\n\\n$modx->regClientScript(\'<script type=\\"text\\/javascript\\">Comparison.add.initialize(\\".comparison-\'.$list.\'\\", {minItems:\'.$minItems.\'});<\\/script>\', true);\\nreturn $pdoTools->getChunk($tpl, $pls);"}',
        'guid' => '0687cd0bb53748d03fc1ef895fed228e',
        'native_key' => 0,
        'signature' => '10550c9cd68f2ced0d7e86f22090cda0',
      ),
      'ea83bd1e27c81a5f8a4188112332ce2b' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"GetComparison","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/** @var array $scriptProperties *\\/\\n$modx->lexicon->load(\'comparison:default\');\\n\\n\\/** @var pdoTools $pdoTools *\\/\\n$fqn = $modx->getOption(\'pdoTools.class\', null, \'pdotools.pdotools\', true);\\nif (!$pdoClass = $modx->loadClass($fqn, \'\', false, true)) {return false;}\\n$scriptProperties[\'nestedChunkPrefix\'] = \'comparison_\';\\n$pdoTools = new $pdoClass($modx, $scriptProperties);\\n\\n$list = trim($modx->getOption(\'list\', $scriptProperties, \'default\'));\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'tpl.Comparison.get\');\\n\\nif (!empty($_SESSION[\'Comparison\'][$modx->context->key][$list])) {\\n\\t$params = $_SESSION[\'Comparison\'][$modx->context->key][$list];\\n\\t$count = count($params[\'ids\']);\\n\\tif ($count >= $params[\'minItems\']) {\\n\\t\\t$can_compare = true;\\n\\t}\\n\\t$added = $modx->resource->id != $params[\'list_id\'];\\n\\n\\t$link_params = array();\\n\\tif ($list != \'default\') {\\n\\t\\t$link_params[\'list\'] = $list;\\n\\t}\\n\\t$link_params[\'cmp_ids\'] = implode(\',\', array_keys($params[\'ids\']));\\n\\t$link = $modx->makeUrl($params[\'list_id\'], \'\', $link_params);\\n}\\nelse {\\n\\t$link = \'#\';\\n\\t$can_compare = $added = false;\\n\\t$count = 0;\\n}\\n\\nreturn $pdoTools->getChunk($tpl, array(\\n\\t\'link\' => $link,\\n\\t\'count\' => $count,\\n\\t\'list\' => $list,\\n\\t\'can_compare\' => $can_compare,\\n\\t\'added\' => $added\\n));","locked":0,"properties":"a:2:{s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:23:\\"comparison_prop_tpl_get\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:18:\\"tpl.Comparison.get\\";s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"list\\";a:7:{s:4:\\"name\\";s:4:\\"list\\";s:4:\\"desc\\";s:24:\\"comparison_prop_list_get\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:7:\\"default\\";s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"core\\/components\\/comparison\\/elements\\/snippets\\/snippet.getcomparison.php","content":"\\/** @var array $scriptProperties *\\/\\n$modx->lexicon->load(\'comparison:default\');\\n\\n\\/** @var pdoTools $pdoTools *\\/\\n$fqn = $modx->getOption(\'pdoTools.class\', null, \'pdotools.pdotools\', true);\\nif (!$pdoClass = $modx->loadClass($fqn, \'\', false, true)) {return false;}\\n$scriptProperties[\'nestedChunkPrefix\'] = \'comparison_\';\\n$pdoTools = new $pdoClass($modx, $scriptProperties);\\n\\n$list = trim($modx->getOption(\'list\', $scriptProperties, \'default\'));\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'tpl.Comparison.get\');\\n\\nif (!empty($_SESSION[\'Comparison\'][$modx->context->key][$list])) {\\n\\t$params = $_SESSION[\'Comparison\'][$modx->context->key][$list];\\n\\t$count = count($params[\'ids\']);\\n\\tif ($count >= $params[\'minItems\']) {\\n\\t\\t$can_compare = true;\\n\\t}\\n\\t$added = $modx->resource->id != $params[\'list_id\'];\\n\\n\\t$link_params = array();\\n\\tif ($list != \'default\') {\\n\\t\\t$link_params[\'list\'] = $list;\\n\\t}\\n\\t$link_params[\'cmp_ids\'] = implode(\',\', array_keys($params[\'ids\']));\\n\\t$link = $modx->makeUrl($params[\'list_id\'], \'\', $link_params);\\n}\\nelse {\\n\\t$link = \'#\';\\n\\t$can_compare = $added = false;\\n\\t$count = 0;\\n}\\n\\nreturn $pdoTools->getChunk($tpl, array(\\n\\t\'link\' => $link,\\n\\t\'count\' => $count,\\n\\t\'list\' => $list,\\n\\t\'can_compare\' => $can_compare,\\n\\t\'added\' => $added\\n));"}',
        'guid' => 'cae347cb98f6f6a0210a812ff70a91e7',
        'native_key' => 0,
        'signature' => '11af2f3dc85f94aaee33592cb6006b18',
      ),
      '52e82c1161506f5550120f17e576f078' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"CompareList","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/** @var array $scriptProperties *\\/\\n\\/** @var Comparison $Comparison *\\/\\n$Comparison = $modx->getService(\'comparison\',\'Comparison\',$modx->getOption(\'comparison_core_path\',null,$modx->getOption(\'core_path\').\'components\\/comparison\\/\').\'model\\/comparison\\/\',$scriptProperties);\\nif (!($Comparison instanceof Comparison)) return \'\';\\n$Comparison->initialize($modx->context->key);\\n\\/** @var pdoFetch $pdoFetch *\\/\\n$fqn = $modx->getOption(\'pdoFetch.class\', null, \'pdotools.pdofetch\', true);\\nif (!$pdoClass = $modx->loadClass($fqn, \'\', false, true)) {return false;}\\n$pdoFetch = new $pdoClass($modx, $scriptProperties);\\n\\n$list = !empty($_REQUEST[\'list\'])\\n\\t? (string) $_REQUEST[\'list\']\\n\\t: \'default\';\\nif (empty($_SESSION[\'Comparison\'][$modx->context->key][$list]) && empty($_REQUEST[\'cmp_ids\'])) {\\n\\treturn $modx->lexicon(\'comparison_err_no_list\');\\n}\\n\\nif (empty($fields)) {$fields = \'{\\"default\\":[\\"price\\",\\"article\\",\\"vendor.name\\",\\"color\\",\\"size\\"]}\';}\\nif (empty($tplRow)) {$tplRow = \'tpl.Comparison.row\';}\\nif (empty($tplParam)) {$tplParam = \'tpl.Comparison.param\';}\\nif (empty($tplCell)) {$tplCell = \'tpl.Comparison.cell\';}\\nif (empty($tplHead)) {$tplHead = \'tpl.Comparison.head\';}\\nif (empty($tplCorner)) {$tplCorner = \'tpl.Comparison.corner\';}\\nif (empty($tplOuter)) {$tplOuter = \'tpl.Comparison.outer\';}\\nif (empty($minItems)) {$minItems = 2;}\\nif (empty($maxItems)) {$maxItems = 10;}\\nif (!isset($scriptProperties[\'showUnpublished\'])) {$scriptProperties[\'showUnpublished\'] = false;}\\nif (!isset($scriptProperties[\'showDeleted\'])) {$scriptProperties[\'showDeleted\'] = false;}\\n\\n$fields = $modx->fromJSON($fields);\\nif (empty($fields) || !is_array($fields)) {\\n\\treturn $modx->lexicon(\'comparison_err_wrong_fields\');\\n}\\nelseif (!isset($fields[$list])) {\\n\\tif ($modx->user->isAuthenticated(\'mgr\')) {\\n\\t\\treturn $modx->lexicon(\'comparison_err_wrong_list\', array(\'list\' => $list));\\n\\t}\\n\\telse {\\n\\t\\treturn $modx->lexicon(\'comparison_err_no_list\');\\n\\t}\\n}\\n$fields = $fields[$list];\\n\\n$format = null;\\nif (!empty($formatSnippet)) {\\n\\t\\/** @var modSnippet $format *\\/\\n\\t$format = $modx->getObject(\'modSnippet\', array(\'name\' => $formatSnippet));\\n}\\n\\n\\/\\/ Joining MS2 tables\\nif (file_exists(MODX_CORE_PATH . \'components\\/minishop2\\/model\\/minishop2\\/minishop2.class.php\')) {\\n\\t$class = \'msProduct\';\\n\\t$leftJoin = array(\\n\\t\\tarray(\'class\' => \'msProductData\', \'alias\' => \'Data\', \'on\' => \'`\'.$class.\'`.`id`=`Data`.`id`\'),\\n\\t\\tarray(\'class\' => \'msVendor\', \'alias\' => \'Vendor\', \'on\' => \'`Data`.`vendor`=`Vendor`.`id`\'),\\n\\t);\\n\\n\\t$select = array(\\n\\t\\t$class => !empty($includeContent) ?  $modx->getSelectColumns($class, $class) : $modx->getSelectColumns($class, $class, \'\', array(\'content\'), true),\\n\\t\\t\'Data\' => $modx->getSelectColumns(\'msProductData\', \'Data\', \'\', array(\'id\'), true),\\n\\t\\t\'Vendor\' => $modx->getSelectColumns(\'msVendor\', \'Vendor\', \'vendor.\', array(\'id\'), true),\\n\\t);\\n\\n\\t$thumbsSelect = array();\\n\\tif (!empty($includeThumbs)) {\\n\\t\\t$thumbs = array_map(\'trim\',explode(\',\',$includeThumbs));\\n\\t\\tif(!empty($thumbs[0])){\\n\\t\\t\\tforeach ($thumbs as $thumb) {\\n\\t\\t\\t\\t$leftJoin[] = array(\\n\\t\\t\\t\\t\\t\'class\' => \'msProductFile\',\\n\\t\\t\\t\\t\\t\'alias\' => $thumb,\\n\\t\\t\\t\\t\\t\'on\' => \\"`$thumb`.`product_id` = `{$class}`.`id` AND `$thumb`.`parent` != 0 AND `$thumb`.`path` LIKE \'%\\/$thumb\\/\'\\"\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\t$select[$thumb] = \\"`$thumb`.`url` as `$thumb`\\";\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\nelse {\\n\\t$class = \'modResource\';\\n\\t$leftJoin = $select = array();\\n}\\n\\n\\/\\/ Add custom parameters\\nforeach (array(\'leftJoin\',\'select\') as $v) {\\n\\tif (!empty($scriptProperties[$v])) {\\n\\t\\t$tmp = $modx->fromJSON($scriptProperties[$v]);\\n\\t\\tif (is_array($tmp)) {\\n\\t\\t\\t$$v = array_merge($$v, $tmp);\\n\\t\\t}\\n\\t}\\n\\tunset($scriptProperties[$v]);\\n}\\n\\n$ids = !empty($_SESSION[\'Comparison\'][$modx->context->key][$list][\'ids\'])\\n\\t? array_keys($_SESSION[\'Comparison\'][$modx->context->key][$list][\'ids\'])\\n\\t: explode(\',\', preg_replace(\'\\/[^0-9\\\\,]\\/\', \'\', $_REQUEST[\'cmp_ids\']));\\n\\n$properties = array(\\n\\t\'class\' => $class,\\n\\t\'parents\' => 0,\\n\\t\'resources\' => implode(\',\', $ids),\\n\\t\'includeTVs\' => implode(\',\', $fields),\\n\\t\'leftJoin\' => $leftJoin,\\n\\t\'select\' => $select,\\n\\t\'return\' => \'data\',\\n\\t\'nestedChunkPrefix\' => \'comparison_\'\\n);\\n$pdoFetch->setConfig(array_merge($scriptProperties, $properties), false);\\n$resources = $pdoFetch->run();\\n\\n$output = $rows = \'\';\\nif (count($ids) < $minItems) {\\n\\t$output = $modx->lexicon(\'comparison_err_min_count\');\\n}\\nelseif (count($ids) > $maxItems) {\\n\\t$output = $modx->lexicon(\'comparison_err_max_resource\');\\n}\\nelse {\\n\\t$row_idx = 1;\\n\\tforeach ($fields as $field) {\\n\\t\\t$cells = $pdoFetch->getChunk($tplParam, array(\'field\' => $field, \'param\' => $modx->lexicon(\'comparison_field_\'.$field)));\\n\\t\\t$cell_idx = 1;\\n\\t\\t$previous_value = null;\\n\\t\\t$same = true;\\n\\t\\tforeach ($resources as $resource) {\\n\\t\\t\\t$value = array_key_exists($field, $resource)\\n\\t\\t\\t\\t? $resource[$field]\\n\\t\\t\\t\\t: null;\\n\\t\\t\\t\\/\\/ Send value to special snippet\\n\\t\\t\\tif ($format) {\\n\\t\\t\\t\\t$format->_cacheable = false;\\n\\t\\t\\t\\t$format->_processed = false;\\n\\t\\t\\t\\t$format->_content = \'\';\\n\\t\\t\\t\\t$value = $format->process(array(\\n\\t\\t\\t\\t\\t\'name\' => $field,\\n\\t\\t\\t\\t\\t\'field\' => $field,\\n\\t\\t\\t\\t\\t\'input\' => $value,\\n\\t\\t\\t\\t\\t\'value\' => $value,\\n\\t\\t\\t\\t\\t\'resource\' => $resource,\\n\\t\\t\\t\\t\\t\'pdoTools\' => $pdoFetch,\\n\\t\\t\\t\\t\\t\'pdoFetch\' => $pdoFetch,\\n\\t\\t\\t\\t));\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tif (is_array($value)) {\\n\\t\\t\\t\\t\\tnatsort($value);\\n\\t\\t\\t\\t\\t$value = implode(\',\', $value);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\/** @var miniShop2 $miniShop2 *\\/\\n\\t\\t\\t\\tif ($class == \'msProduct\' && $miniShop2 = $modx->getService(\'minishop2\')) {\\n\\t\\t\\t\\t\\tswitch ($field) {\\n\\t\\t\\t\\t\\t\\tcase \'price\':\\n\\t\\t\\t\\t\\t\\t\\t$value = $miniShop2->formatPrice($value) . \' \' . $modx->lexicon(\'ms2_frontend_currency\');\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase \'weight\':\\n\\t\\t\\t\\t\\t\\t\\t$value = $miniShop2->formatWeight($value) . \' \' . $modx->lexicon(\'ms2_frontend_weight_unit\');\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ($same && $cell_idx > 1) {\\n\\t\\t\\t\\t$same = $previous_value == $value;\\n\\t\\t\\t}\\n\\t\\t\\t$cells .= $pdoFetch->getChunk($tplCell, array(\'value\' => $value, \'cell_idx\' => $cell_idx ++, \'classes\' => \' field-\'.$field));\\n\\t\\t\\t$previous_value = $value;\\n\\t\\t}\\n\\t\\t$rows .= $pdoFetch->getChunk($tplRow, array(\'cells\' => $cells, \'row_idx\' => $row_idx ++, \'same\' => $same));\\n\\t}\\n\\n\\t$cells = $pdoFetch->getChunk($tplCorner);\\n\\tforeach ($resources as $resource) {\\n\\t\\t$cells .= $pdoFetch->getChunk($tplHead, $resource);\\n\\t}\\n\\t$head = $pdoFetch->getChunk($tplRow, array(\'cells\' => $cells, \'list\' => $list));\\n\\n\\t$output = $pdoFetch->getChunk($tplOuter, array(\'head\' => $head, \'rows\' => $rows));\\n}\\n\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n\\t$output .= \'<pre class=\\"CompareListLog\\">\' . print_r($pdoFetch->getTime(),1) . \'<\\/pre>\';\\n}\\n\\n$modx->regClientScript(\'<script type=\\"text\\/javascript\\">Comparison.list.initialize(\\".comparison-table\\", {minItems:\'.$minItems.\'});<\\/script>\', true);\\nreturn $output;","locked":0,"properties":"a:11:{s:6:\\"fields\\";a:7:{s:4:\\"name\\";s:6:\\"fields\\";s:4:\\"desc\\";s:22:\\"comparison_prop_fields\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:60:\\"{\\"default\\":[\\"price\\",\\"article\\",\\"vendor.name\\",\\"color\\",\\"size\\"]}\\";s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"tplRow\\";a:7:{s:4:\\"name\\";s:6:\\"tplRow\\";s:4:\\"desc\\";s:22:\\"comparison_prop_tplRow\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:18:\\"tpl.Comparison.row\\";s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"tplParam\\";a:7:{s:4:\\"name\\";s:8:\\"tplParam\\";s:4:\\"desc\\";s:24:\\"comparison_prop_tplParam\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:20:\\"tpl.Comparison.param\\";s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"tplCell\\";a:7:{s:4:\\"name\\";s:7:\\"tplCell\\";s:4:\\"desc\\";s:23:\\"comparison_prop_tplCell\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:19:\\"tpl.Comparison.cell\\";s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"tplHead\\";a:7:{s:4:\\"name\\";s:7:\\"tplHead\\";s:4:\\"desc\\";s:23:\\"comparison_prop_tplHead\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:19:\\"tpl.Comparison.head\\";s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"tplCorner\\";a:7:{s:4:\\"name\\";s:9:\\"tplCorner\\";s:4:\\"desc\\";s:25:\\"comparison_prop_tplCorner\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:21:\\"tpl.Comparison.corner\\";s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"tplOuter\\";a:7:{s:4:\\"name\\";s:8:\\"tplOuter\\";s:4:\\"desc\\";s:24:\\"comparison_prop_tplOuter\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:20:\\"tpl.Comparison.outer\\";s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"minItems\\";a:7:{s:4:\\"name\\";s:8:\\"minItems\\";s:4:\\"desc\\";s:24:\\"comparison_prop_minItems\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:2;s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"maxItems\\";a:7:{s:4:\\"name\\";s:8:\\"maxItems\\";s:4:\\"desc\\";s:24:\\"comparison_prop_maxItems\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"formatSnippet\\";a:7:{s:4:\\"name\\";s:13:\\"formatSnippet\\";s:4:\\"desc\\";s:29:\\"comparison_prop_formatSnippet\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"showLog\\";a:7:{s:4:\\"name\\";s:7:\\"showLog\\";s:4:\\"desc\\";s:23:\\"comparison_prop_showLog\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:21:\\"comparison:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"core\\/components\\/comparison\\/elements\\/snippets\\/snippet.comparelist.php","content":"\\/** @var array $scriptProperties *\\/\\n\\/** @var Comparison $Comparison *\\/\\n$Comparison = $modx->getService(\'comparison\',\'Comparison\',$modx->getOption(\'comparison_core_path\',null,$modx->getOption(\'core_path\').\'components\\/comparison\\/\').\'model\\/comparison\\/\',$scriptProperties);\\nif (!($Comparison instanceof Comparison)) return \'\';\\n$Comparison->initialize($modx->context->key);\\n\\/** @var pdoFetch $pdoFetch *\\/\\n$fqn = $modx->getOption(\'pdoFetch.class\', null, \'pdotools.pdofetch\', true);\\nif (!$pdoClass = $modx->loadClass($fqn, \'\', false, true)) {return false;}\\n$pdoFetch = new $pdoClass($modx, $scriptProperties);\\n\\n$list = !empty($_REQUEST[\'list\'])\\n\\t? (string) $_REQUEST[\'list\']\\n\\t: \'default\';\\nif (empty($_SESSION[\'Comparison\'][$modx->context->key][$list]) && empty($_REQUEST[\'cmp_ids\'])) {\\n\\treturn $modx->lexicon(\'comparison_err_no_list\');\\n}\\n\\nif (empty($fields)) {$fields = \'{\\"default\\":[\\"price\\",\\"article\\",\\"vendor.name\\",\\"color\\",\\"size\\"]}\';}\\nif (empty($tplRow)) {$tplRow = \'tpl.Comparison.row\';}\\nif (empty($tplParam)) {$tplParam = \'tpl.Comparison.param\';}\\nif (empty($tplCell)) {$tplCell = \'tpl.Comparison.cell\';}\\nif (empty($tplHead)) {$tplHead = \'tpl.Comparison.head\';}\\nif (empty($tplCorner)) {$tplCorner = \'tpl.Comparison.corner\';}\\nif (empty($tplOuter)) {$tplOuter = \'tpl.Comparison.outer\';}\\nif (empty($minItems)) {$minItems = 2;}\\nif (empty($maxItems)) {$maxItems = 10;}\\nif (!isset($scriptProperties[\'showUnpublished\'])) {$scriptProperties[\'showUnpublished\'] = false;}\\nif (!isset($scriptProperties[\'showDeleted\'])) {$scriptProperties[\'showDeleted\'] = false;}\\n\\n$fields = $modx->fromJSON($fields);\\nif (empty($fields) || !is_array($fields)) {\\n\\treturn $modx->lexicon(\'comparison_err_wrong_fields\');\\n}\\nelseif (!isset($fields[$list])) {\\n\\tif ($modx->user->isAuthenticated(\'mgr\')) {\\n\\t\\treturn $modx->lexicon(\'comparison_err_wrong_list\', array(\'list\' => $list));\\n\\t}\\n\\telse {\\n\\t\\treturn $modx->lexicon(\'comparison_err_no_list\');\\n\\t}\\n}\\n$fields = $fields[$list];\\n\\n$format = null;\\nif (!empty($formatSnippet)) {\\n\\t\\/** @var modSnippet $format *\\/\\n\\t$format = $modx->getObject(\'modSnippet\', array(\'name\' => $formatSnippet));\\n}\\n\\n\\/\\/ Joining MS2 tables\\nif (file_exists(MODX_CORE_PATH . \'components\\/minishop2\\/model\\/minishop2\\/minishop2.class.php\')) {\\n\\t$class = \'msProduct\';\\n\\t$leftJoin = array(\\n\\t\\tarray(\'class\' => \'msProductData\', \'alias\' => \'Data\', \'on\' => \'`\'.$class.\'`.`id`=`Data`.`id`\'),\\n\\t\\tarray(\'class\' => \'msVendor\', \'alias\' => \'Vendor\', \'on\' => \'`Data`.`vendor`=`Vendor`.`id`\'),\\n\\t);\\n\\n\\t$select = array(\\n\\t\\t$class => !empty($includeContent) ?  $modx->getSelectColumns($class, $class) : $modx->getSelectColumns($class, $class, \'\', array(\'content\'), true),\\n\\t\\t\'Data\' => $modx->getSelectColumns(\'msProductData\', \'Data\', \'\', array(\'id\'), true),\\n\\t\\t\'Vendor\' => $modx->getSelectColumns(\'msVendor\', \'Vendor\', \'vendor.\', array(\'id\'), true),\\n\\t);\\n\\n\\t$thumbsSelect = array();\\n\\tif (!empty($includeThumbs)) {\\n\\t\\t$thumbs = array_map(\'trim\',explode(\',\',$includeThumbs));\\n\\t\\tif(!empty($thumbs[0])){\\n\\t\\t\\tforeach ($thumbs as $thumb) {\\n\\t\\t\\t\\t$leftJoin[] = array(\\n\\t\\t\\t\\t\\t\'class\' => \'msProductFile\',\\n\\t\\t\\t\\t\\t\'alias\' => $thumb,\\n\\t\\t\\t\\t\\t\'on\' => \\"`$thumb`.`product_id` = `{$class}`.`id` AND `$thumb`.`parent` != 0 AND `$thumb`.`path` LIKE \'%\\/$thumb\\/\'\\"\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\t$select[$thumb] = \\"`$thumb`.`url` as `$thumb`\\";\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\nelse {\\n\\t$class = \'modResource\';\\n\\t$leftJoin = $select = array();\\n}\\n\\n\\/\\/ Add custom parameters\\nforeach (array(\'leftJoin\',\'select\') as $v) {\\n\\tif (!empty($scriptProperties[$v])) {\\n\\t\\t$tmp = $modx->fromJSON($scriptProperties[$v]);\\n\\t\\tif (is_array($tmp)) {\\n\\t\\t\\t$$v = array_merge($$v, $tmp);\\n\\t\\t}\\n\\t}\\n\\tunset($scriptProperties[$v]);\\n}\\n\\n$ids = !empty($_SESSION[\'Comparison\'][$modx->context->key][$list][\'ids\'])\\n\\t? array_keys($_SESSION[\'Comparison\'][$modx->context->key][$list][\'ids\'])\\n\\t: explode(\',\', preg_replace(\'\\/[^0-9\\\\,]\\/\', \'\', $_REQUEST[\'cmp_ids\']));\\n\\n$properties = array(\\n\\t\'class\' => $class,\\n\\t\'parents\' => 0,\\n\\t\'resources\' => implode(\',\', $ids),\\n\\t\'includeTVs\' => implode(\',\', $fields),\\n\\t\'leftJoin\' => $leftJoin,\\n\\t\'select\' => $select,\\n\\t\'return\' => \'data\',\\n\\t\'nestedChunkPrefix\' => \'comparison_\'\\n);\\n$pdoFetch->setConfig(array_merge($scriptProperties, $properties), false);\\n$resources = $pdoFetch->run();\\n\\n$output = $rows = \'\';\\nif (count($ids) < $minItems) {\\n\\t$output = $modx->lexicon(\'comparison_err_min_count\');\\n}\\nelseif (count($ids) > $maxItems) {\\n\\t$output = $modx->lexicon(\'comparison_err_max_resource\');\\n}\\nelse {\\n\\t$row_idx = 1;\\n\\tforeach ($fields as $field) {\\n\\t\\t$cells = $pdoFetch->getChunk($tplParam, array(\'field\' => $field, \'param\' => $modx->lexicon(\'comparison_field_\'.$field)));\\n\\t\\t$cell_idx = 1;\\n\\t\\t$previous_value = null;\\n\\t\\t$same = true;\\n\\t\\tforeach ($resources as $resource) {\\n\\t\\t\\t$value = array_key_exists($field, $resource)\\n\\t\\t\\t\\t? $resource[$field]\\n\\t\\t\\t\\t: null;\\n\\t\\t\\t\\/\\/ Send value to special snippet\\n\\t\\t\\tif ($format) {\\n\\t\\t\\t\\t$format->_cacheable = false;\\n\\t\\t\\t\\t$format->_processed = false;\\n\\t\\t\\t\\t$format->_content = \'\';\\n\\t\\t\\t\\t$value = $format->process(array(\\n\\t\\t\\t\\t\\t\'name\' => $field,\\n\\t\\t\\t\\t\\t\'field\' => $field,\\n\\t\\t\\t\\t\\t\'input\' => $value,\\n\\t\\t\\t\\t\\t\'value\' => $value,\\n\\t\\t\\t\\t\\t\'resource\' => $resource,\\n\\t\\t\\t\\t\\t\'pdoTools\' => $pdoFetch,\\n\\t\\t\\t\\t\\t\'pdoFetch\' => $pdoFetch,\\n\\t\\t\\t\\t));\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tif (is_array($value)) {\\n\\t\\t\\t\\t\\tnatsort($value);\\n\\t\\t\\t\\t\\t$value = implode(\',\', $value);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\/** @var miniShop2 $miniShop2 *\\/\\n\\t\\t\\t\\tif ($class == \'msProduct\' && $miniShop2 = $modx->getService(\'minishop2\')) {\\n\\t\\t\\t\\t\\tswitch ($field) {\\n\\t\\t\\t\\t\\t\\tcase \'price\':\\n\\t\\t\\t\\t\\t\\t\\t$value = $miniShop2->formatPrice($value) . \' \' . $modx->lexicon(\'ms2_frontend_currency\');\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase \'weight\':\\n\\t\\t\\t\\t\\t\\t\\t$value = $miniShop2->formatWeight($value) . \' \' . $modx->lexicon(\'ms2_frontend_weight_unit\');\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ($same && $cell_idx > 1) {\\n\\t\\t\\t\\t$same = $previous_value == $value;\\n\\t\\t\\t}\\n\\t\\t\\t$cells .= $pdoFetch->getChunk($tplCell, array(\'value\' => $value, \'cell_idx\' => $cell_idx ++, \'classes\' => \' field-\'.$field));\\n\\t\\t\\t$previous_value = $value;\\n\\t\\t}\\n\\t\\t$rows .= $pdoFetch->getChunk($tplRow, array(\'cells\' => $cells, \'row_idx\' => $row_idx ++, \'same\' => $same));\\n\\t}\\n\\n\\t$cells = $pdoFetch->getChunk($tplCorner);\\n\\tforeach ($resources as $resource) {\\n\\t\\t$cells .= $pdoFetch->getChunk($tplHead, $resource);\\n\\t}\\n\\t$head = $pdoFetch->getChunk($tplRow, array(\'cells\' => $cells, \'list\' => $list));\\n\\n\\t$output = $pdoFetch->getChunk($tplOuter, array(\'head\' => $head, \'rows\' => $rows));\\n}\\n\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n\\t$output .= \'<pre class=\\"CompareListLog\\">\' . print_r($pdoFetch->getTime(),1) . \'<\\/pre>\';\\n}\\n\\n$modx->regClientScript(\'<script type=\\"text\\/javascript\\">Comparison.list.initialize(\\".comparison-table\\", {minItems:\'.$minItems.\'});<\\/script>\', true);\\nreturn $output;"}',
        'guid' => 'e41ba12454740d38f14f74755a399f09',
        'native_key' => 0,
        'signature' => '0fcc3e4bae416f5d7fba291ae9d49b9d',
      ),
    ),
    'Plugins' => 
    array (
      '69ffb90cc11be9b0055e6ab410ff4feb' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modPlugin',
        'object' => '{"id":null,"source":1,"property_preprocess":0,"name":"Comparison","description":"","editor_type":0,"category":0,"cache_type":0,"plugincode":"switch ($modx->event->name) {\\n\\n\\tcase \'OnHandleRequest\':\\n\\t\\tif (empty($_REQUEST[\'cmp_action\']) || empty($_SERVER[\'HTTP_X_REQUESTED_WITH\']) || $_SERVER[\'HTTP_X_REQUESTED_WITH\'] != \'XMLHttpRequest\') {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t$modx->lexicon->load(\'comparison:default\');\\n\\t\\t$response = array(\'success\' => true, \'message\' => \'\', \'data\' => array());\\n\\n\\t\\t$action = trim(strtolower($_REQUEST[\'cmp_action\']));\\n\\t\\tswitch ($action) {\\n\\t\\t\\tcase \'add\':\\n\\t\\t\\tcase \'remove\':\\n\\t\\t\\t\\t$list = !empty($_REQUEST[\'list\'])\\n\\t\\t\\t\\t\\t? (string) $_REQUEST[\'list\']\\n\\t\\t\\t\\t\\t: \'default\';\\n\\n\\t\\t\\t\\tif ($list != \'default\' && !isset($_SESSION[\'Comparison\'][$modx->context->key][$list])) {\\n\\t\\t\\t\\t\\t$response[\'success\'] = false;\\n\\t\\t\\t\\t\\t$response[\'message\'] = $modx->lexicon(\'comparison_err_add_name\');\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telseif (empty($_REQUEST[\'resource\']) || !$modx->getCount(\'modResource\', array(\'id\' => $_REQUEST[\'resource\'], \'published\' => 1, \'deleted\' => 0))) {\\n\\t\\t\\t\\t\\t$response[\'success\'] = false;\\n\\t\\t\\t\\t\\t$response[\'message\'] = $modx->lexicon(\'comparison_err_add_resource\');\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t$params = & $_SESSION[\'Comparison\'][$modx->context->key][$list];\\n\\t\\t\\t\\t\\t$id = $_REQUEST[\'resource\'];\\n\\t\\t\\t\\t\\tif ($action == \'add\') {\\n\\t\\t\\t\\t\\t\\tif ((count($params[\'ids\']) + 1) > $params[\'maxItems\']) {\\n\\t\\t\\t\\t\\t\\t\\t$response[\'success\'] = false;\\n\\t\\t\\t\\t\\t\\t\\t$response[\'message\'] = $modx->lexicon(\'comparison_err_max_resource\');\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\t\\t$params[\'ids\'][$id] = true;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\tunset($params[\'ids\'][$id]);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t$response[\'data\'] = array(\\n\\t\\t\\t\\t\\t\\t\'total\' => count($params[\'ids\']),\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t$link_params = array();\\n\\t\\t\\t\\t\\tif ($list != \'default\') {\\n\\t\\t\\t\\t\\t\\t$link_params[\'list\'] = $list;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif (!empty($params[\'ids\'])) {\\n\\t\\t\\t\\t\\t\\t$link_params[\'cmp_ids\'] = implode(\',\', array_keys($params[\'ids\']));\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t$response[\'data\'][\'link\'] = !empty($link_params[\'cmp_ids\'])\\n\\t\\t\\t\\t\\t\\t? urldecode($modx->context->makeUrl($params[\'list_id\'], $link_params, $modx->getOption(\'link_tag_scheme\')))\\n\\t\\t\\t\\t\\t\\t: \'#\';\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\n\\t\\t@session_write_close();\\n\\t\\texit($modx->toJSON($response));\\n\\t\\tbreak;\\n\\n}","locked":0,"properties":null,"disabled":0,"moduleguid":"","static":0,"static_file":"core\\/components\\/comparison\\/elements\\/plugins\\/plugin.comparison.php","content":"switch ($modx->event->name) {\\n\\n\\tcase \'OnHandleRequest\':\\n\\t\\tif (empty($_REQUEST[\'cmp_action\']) || empty($_SERVER[\'HTTP_X_REQUESTED_WITH\']) || $_SERVER[\'HTTP_X_REQUESTED_WITH\'] != \'XMLHttpRequest\') {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t$modx->lexicon->load(\'comparison:default\');\\n\\t\\t$response = array(\'success\' => true, \'message\' => \'\', \'data\' => array());\\n\\n\\t\\t$action = trim(strtolower($_REQUEST[\'cmp_action\']));\\n\\t\\tswitch ($action) {\\n\\t\\t\\tcase \'add\':\\n\\t\\t\\tcase \'remove\':\\n\\t\\t\\t\\t$list = !empty($_REQUEST[\'list\'])\\n\\t\\t\\t\\t\\t? (string) $_REQUEST[\'list\']\\n\\t\\t\\t\\t\\t: \'default\';\\n\\n\\t\\t\\t\\tif ($list != \'default\' && !isset($_SESSION[\'Comparison\'][$modx->context->key][$list])) {\\n\\t\\t\\t\\t\\t$response[\'success\'] = false;\\n\\t\\t\\t\\t\\t$response[\'message\'] = $modx->lexicon(\'comparison_err_add_name\');\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telseif (empty($_REQUEST[\'resource\']) || !$modx->getCount(\'modResource\', array(\'id\' => $_REQUEST[\'resource\'], \'published\' => 1, \'deleted\' => 0))) {\\n\\t\\t\\t\\t\\t$response[\'success\'] = false;\\n\\t\\t\\t\\t\\t$response[\'message\'] = $modx->lexicon(\'comparison_err_add_resource\');\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t$params = & $_SESSION[\'Comparison\'][$modx->context->key][$list];\\n\\t\\t\\t\\t\\t$id = $_REQUEST[\'resource\'];\\n\\t\\t\\t\\t\\tif ($action == \'add\') {\\n\\t\\t\\t\\t\\t\\tif ((count($params[\'ids\']) + 1) > $params[\'maxItems\']) {\\n\\t\\t\\t\\t\\t\\t\\t$response[\'success\'] = false;\\n\\t\\t\\t\\t\\t\\t\\t$response[\'message\'] = $modx->lexicon(\'comparison_err_max_resource\');\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\t\\t$params[\'ids\'][$id] = true;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\tunset($params[\'ids\'][$id]);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t$response[\'data\'] = array(\\n\\t\\t\\t\\t\\t\\t\'total\' => count($params[\'ids\']),\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t$link_params = array();\\n\\t\\t\\t\\t\\tif ($list != \'default\') {\\n\\t\\t\\t\\t\\t\\t$link_params[\'list\'] = $list;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif (!empty($params[\'ids\'])) {\\n\\t\\t\\t\\t\\t\\t$link_params[\'cmp_ids\'] = implode(\',\', array_keys($params[\'ids\']));\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t$response[\'data\'][\'link\'] = !empty($link_params[\'cmp_ids\'])\\n\\t\\t\\t\\t\\t\\t? urldecode($modx->context->makeUrl($params[\'list_id\'], $link_params, $modx->getOption(\'link_tag_scheme\')))\\n\\t\\t\\t\\t\\t\\t: \'#\';\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\n\\t\\t@session_write_close();\\n\\t\\texit($modx->toJSON($response));\\n\\t\\tbreak;\\n\\n}"}',
        'guid' => 'ee2c0c4f3a9a8bc730e2fbe416f74035',
        'native_key' => NULL,
        'signature' => '3dba2469ffd0e948c0abf5fc49e7a87e',
        'related_objects' => 
        array (
          'PluginEvents' => 
          array (
            'a9d8ec271b51bc515de2f7c33bcd1131' => 
            array (
              'preserve_keys' => true,
              'update_object' => true,
              'unique_key' => 
              array (
                0 => 'pluginid',
                1 => 'event',
              ),
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnHandleRequest","priority":100,"propertyset":0}',
              'guid' => 'ca26b5e62d69d54fd03012032e72961b',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnHandleRequest',
              ),
              'signature' => '23b57e9dc63e56eb7005f23da31d3ca8',
            ),
          ),
        ),
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => false,
      'unique_key' => 'name',
    ),
    'Plugins' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'PluginEvents' => 
    array (
      'preserve_keys' => true,
      'update_object' => true,
      'unique_key' => 
      array (
        0 => 'pluginid',
        1 => 'event',
      ),
    ),
  ),
  'namespace' => 'comparison',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"comparison-1.1.0-pl\\/modCategory\\/63c7ecbd9dcc76a463254c6fb36a5549\\/0\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"comparison"}',
    ),
    1 => 
    array (
      'type' => 'file',
      'body' => '{"source":"comparison-1.1.0-pl\\/modCategory\\/63c7ecbd9dcc76a463254c6fb36a5549\\/1\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"comparison"}',
    ),
    2 => 
    array (
      'type' => 'php',
      'body' => '{"source":"comparison-1.1.0-pl\\/modCategory\\/63c7ecbd9dcc76a463254c6fb36a5549.resolve.chunks.resolver","type":"php","name":"resolve.chunks"}',
    ),
    3 => 
    array (
      'type' => 'php',
      'body' => '{"source":"comparison-1.1.0-pl\\/modCategory\\/63c7ecbd9dcc76a463254c6fb36a5549.resolve.setup.resolver","type":"php","name":"resolve.setup"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'feb77f2dea2c91490f408cf8d228356f',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '63c7ecbd9dcc76a463254c6fb36a5549',
  'native_key' => NULL,
  'object' => '{"id":null,"parent":0,"category":"Comparison"}',
);